#!/usr/bin/env node

const SERVICE_PORT = process.env.PORT || 80;
const path = require('path');
const program = require('commander');
const chalk = require('chalk');

program
.arguments('[file]')
.option('-h, --host [ip]', 'Host to listen on.')
.option('-p, --port [port]', 'Port to listen on.')
.option('-s, --silent', 'Enable silent mode.')
.action(file => serve({file, host: program.host, port: program.port, silent: program.silent}))
.parse(process.argv);

if(!program.args.length) serve(program.opts());

function serve({file, port = SERVICE_PORT, host = '0.0.0.0', silent = false}) {
  if (!file) {
    try {
      const packageJson = require(path.resolve(process.cwd(), 'package.json'));
      file = packageJson.main || 'index.js';
    } catch (err) {
      if (err.code !== 'MODULE_NOT_FOUND') {
        console.error(chalk.red(`Could not read \`package.json\`: ${err.message}`));
        process.exit(1);
      }
    }
  }

  if (!file) return console.error(chalk.red('Please supply a file.'));
  if (file[0] !== '/') file = path.resolve(process.cwd(), file);

  let server = null;

  process.on('SIGINT', () => server.close(() => process.exit(0)));

  require('../lib')
  .server(file, {port, host, silent})
  .then(srv => server = srv)
  .catch(err => {
    console.error(chalk.red(`An unexpected error occurred.`));
    console.error(err.stack);
    process.exit(1);
  });
}